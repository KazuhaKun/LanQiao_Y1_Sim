C51 COMPILER V9.54   MAIN                                                                  03/20/2025 20:22:36 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H> //单片机头文件
   2          #include "iic.h"  //IIC相关代码,直接调用EEPROM和AD/DA(Da_Write;Ad_Read;EEPROM_Read;EEPROM_Write)
   3          #include "ds1302.h"   //直接操作rtc时钟(Read_Rtc;Set_Rtc)
   4          #include "onewire.h"  //直接读出24C20温度(rd_temperature)
   5          #include <string.h>   //memset需要
   6          #include "init.h"
   7          #include "key.h"
   8          #include "led.h"
   9          #include "seg.h"
  10          #include "ultrawave.h"
  11          
  12          void Delay(unsigned int t){
  13   1        while(t--){
  14   2        }
  15   1      }
  16          
  17          //HC138的选择
  18          void SetHC138(unsigned char channel,unsigned char dat){
  19   1        P2 = (P2 & 0x1f) | (channel << 5);
  20   1        P0 = dat;
  21   1      }
  22          
  23          //超多变量
  24          unsigned char Key_Val, Key_Down, Key_Old, Key_Up; //按键相关变量
  25          unsigned char Seg_Buf[8]={17,17,17,17,17,17,17,17};   //数码管对应位置显示值存储数组
  26          unsigned char Seg_Point[8]={0,0,0,0,0,0,0,0};   //数码管对应位置小数点存储数组
  27          unsigned char Seg_Pos;    //数码管刷新位置值
  28          unsigned char ucLed[8]={0,0,0,0,0,0,0,0};   //LED对应位置状态存储数组
  29          unsigned char Uart_Recv[10];  //串口接收存储数组
  30          unsigned char Uart_Recv_Index;  //串口数据索引
  31          unsigned char ucRtc[3] = {11,12,13};  //Rtc时钟数值
  32          unsigned int Slow_Down;   //用于计时中断服务函数
  33          bit Seg_Flag, Key_Flag;   //同上
  34          bit Uart_Flag;        //同上
  35          unsigned int Time_1s;   //同上,主要负责频率的处理
  36          unsigned int Freq;      //频率值
  37          unsigned int Sys_Tick;    //
  38          unsigned char Seg_Disp_Mode;  //0 温度显示 1 参数设置 2 DAC
  39          unsigned char DAC_Mode=0;
  40          float T;
  41          unsigned int temp_disp;
  42          unsigned char temp_set=25;
  43          unsigned char temp_DAC_set=25;
  44          float DAC_Set;
  45          unsigned int DAC_Disp;
  46          
  47          void Key_Proc(){
  48   1        if(Key_Flag)return;
  49   1        Key_Flag = 1;
  50   1        Key_Val = Key_Read();
  51   1        Key_Down = Key_Val & (Key_Old ^ Key_Val);
  52   1        Key_Up = ~Key_Val & (Key_Old ^ Key_Val);
  53   1        Key_Old = Key_Val;
  54   1      
C51 COMPILER V9.54   MAIN                                                                  03/20/2025 20:22:36 PAGE 2   

  55   1        switch(Key_Down){
  56   2          case 4:
  57   2            if(++Seg_Disp_Mode==3) Seg_Disp_Mode=0;
  58   2            if(Seg_Disp_Mode==2) temp_DAC_set=temp_set;
  59   2            break;
  60   2          case 8:
  61   2            if(Seg_Disp_Mode==1) {
  62   3              // temp_set--;
  63   3              if(--temp_set==255) temp_set=0;
  64   3      
  65   3            }
  66   2            break;
  67   2          case 9:
  68   2            if(Seg_Disp_Mode==1) {
  69   3              // if(++temp_set==100) temp_set=99;
  70   3              if(++temp_set==0) temp_set=255;
  71   3            }
  72   2            break;
  73   2          case 5:
  74   2            if(++DAC_Mode==2) DAC_Mode=0;
  75   2            break;
  76   2          
  77   2        }
  78   1      }
  79          
  80          void Led_Proc(){
  81   1        ucLed[0]=(DAC_Mode==0); 
  82   1        ucLed[1]=(Seg_Disp_Mode==0);
  83   1        ucLed[2]=(Seg_Disp_Mode==1);
  84   1        ucLed[3]=(Seg_Disp_Mode==2);
  85   1      }
  86          
  87          void Seg_Proc(){
  88   1        if(Seg_Flag) return;
  89   1        Seg_Flag = 1;
  90   1      
  91   1        T=rd_temperature();
  92   1        // T=15.0;
  93   1        temp_disp = T * 100;
  94   1        //
  95   1        if(Seg_Disp_Mode==0){
  96   2          Seg_Buf[0]=12;
  97   2          Seg_Buf[4]=temp_disp/1000%10;
  98   2          Seg_Buf[5]=temp_disp/100%10;
  99   2          Seg_Point[5]=1;
 100   2          Seg_Buf[6]=temp_disp/10%10;
 101   2          Seg_Buf[7]=temp_disp%10;
 102   2        }
 103   1        if(Seg_Disp_Mode==1){
 104   2          Seg_Buf[0]=18;
 105   2          Seg_Buf[4]=17;
 106   2          Seg_Buf[5]=17;
 107   2          Seg_Point[5]=0;
 108   2          Seg_Buf[6]=temp_set/10%10;
 109   2          Seg_Buf[7]=temp_set%10;
 110   2        }
 111   1        if(Seg_Disp_Mode==2){
 112   2          Seg_Buf[0]=10;
 113   2          Seg_Buf[4]=17;
 114   2          Seg_Buf[5]=DAC_Disp/100%10;
 115   2          Seg_Point[5]=1;
 116   2          Seg_Buf[6]=DAC_Disp/10%10;
C51 COMPILER V9.54   MAIN                                                                  03/20/2025 20:22:36 PAGE 3   

 117   2          Seg_Buf[7]=DAC_Disp%10;
 118   2        }
 119   1      }
 120          
 121          void DA_Proc(){
 122   1        if(DAC_Mode==0) {
 123   2          if(T<temp_DAC_set) DAC_Set=0;
 124   2          else DAC_Set=255;
 125   2        }
 126   1        if(DAC_Mode==1) {
 127   2          if(T<=20) DAC_Set=51;
 128   2          else if(T<=40) DAC_Set=7.65*T-102;
 129   2          else if(T>40) DAC_Set=204;
 130   2        }
 131   1        DAC_Disp = DAC_Set*100/51.0;
 132   1        Da_Write(DAC_Set);
 133   1      }
 134          
 135          // void Timer0_Init(void){
 136          //  AUXR &= 0x7f;
 137          //  TMOD &= 0xf0;
 138          //  TMOD |= 0x05;
 139          //  TL0 = 0;
 140          //  TH0 = 0;
 141          //  TF0 = 0;
 142          //  TR0 = 1;
 143          // }
 144          void Timer1_Init(void){
 145   1        AUXR &= 0xbf;
 146   1        TMOD &= 0x0f;
 147   1        TL1 = (65536-1000)%256;
 148   1        TH1 = (65536-1000)/256;
 149   1        TF1 = 0;
 150   1        TR1 = 1;
 151   1        ET1 = 1;
 152   1        EA = 1;
 153   1      }
 154          
 155          void Timer1_Isr(void) interrupt 3
 156          {
 157   1        if (++Slow_Down == 400){
 158   2          Seg_Flag = Slow_Down =0;
 159   2        }
 160   1        if (Slow_Down % 10 == 0){
 161   2          Key_Flag = 0;
 162   2        }
 163   1        Seg_Disp(Slow_Down % 8, Seg_Buf[Slow_Down % 8], Seg_Point[Slow_Down % 8]);
 164   1        Led_Disp(Slow_Down % 8, ucLed[Slow_Down % 8]);
 165   1        // if (Slow_Down % 100 == 0) Da_Write(DAC_Set);
 166   1      }
 167          
 168          void main(){
 169   1        InitSys();
 170   1        Timer1_Init();
 171   1        Set_Rtc(ucRtc);
 172   1        // Init_18B20();
 173   1        while(1){
 174   2          Key_Proc();
 175   2          Seg_Proc();
 176   2          Led_Proc();
 177   2          DA_Proc();
 178   2        }
C51 COMPILER V9.54   MAIN                                                                  03/20/2025 20:22:36 PAGE 4   

 179   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    832    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     67    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
